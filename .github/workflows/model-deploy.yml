name: Containerize Model in Inference Server


on:
  repository_dispatch:
    types: "build-inference-server"


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_inference_server:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v3 


    - name: Set up Python     
      uses: actions/setup-python@v4
      with: 
        python-version: '3.7.13'
        cache: 'pip'
    
    - name: Install Dependencies
      run: pip install wandb
      # run: pip install -r ./.github/workflows/requirements.txt


    - name: Login to W&B
      run: wandb login




    # Use the payload to pull down relevant artifacts, test and deploy them! 
    - name: Echo Template Strings from W&B Webhook
      run: |
        echo -e "${{ github.event.client_payload.my_custom_string1 }}\n\
        ${{ github.event.client_payload.my_custom_string2 }}\n\
        ${{ github.event.client_payload.event_type }}\n\
        ${{ github.event.client_payload.event_author }}\n\
        ${{ github.event.client_payload.artifact_version }}\n\
        ${{ github.event.client_payload.artifact_version_string }}\n\
        ${{ github.event.client_payload.artifact_collection_name }}\n\
        ${{ github.event.client_payload.project_name }}\n\
        ${{ github.event.client_payload.entity_name }}"
    
   - name: Retrieve Artifacts
     run: python .github/workflows/retrieve_artifacts.py --registered_model_name "${{ github.event.client_payload.artifact_version_string }}"


    - name: Containerize the artifact in our inference server
      uses: docker/build-push-action@v4
      with:
        context: ./docker_context
        file: src/torchserve/Dockerfile
        push: true
        tags: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
